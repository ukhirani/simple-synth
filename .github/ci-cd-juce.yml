name: Build and Deploy JUCE Standalone

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact: simple-synth-linux.AppImage
            build_script: ./scripts/build-linux-appimage.sh
          - os: macos-latest
            artifact: simple-synth-macos.dmg
            build_script: ./scripts/build-macos-dmg.sh
          - os: windows-latest
            artifact: simple-synth-windows.exe
            build_script: .\\scripts\\build-windows-exe.bat

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libfreetype6-dev libx11-dev libxext-dev libxinerama-dev libxcursor-dev libxrandr-dev libxcomposite-dev libasound2-dev libjack-jackd2-dev wget
          # Install AppImage tools if needed
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O appimagetool
          chmod +x appimagetool
          sudo mv appimagetool /usr/local/bin/

      - name: Set up dependencies (macOS only)
        if: matrix.os == 'macos-latest'
        run: |
          brew install cmake

      - name: Set up dependencies (Windows only)
        if: matrix.os == 'windows-latest'
        run: |
          choco install cmake

      - name: Build artifact
        run: ${{ matrix.build_script }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: ./build/${{ matrix.artifact }}

  deploy:
    name: Deploy Outputs and Update index.html
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./downloads

      - name: Copy new builds to downloads/
        run: |
          mkdir -p downloads
          cp ./downloads/simple-synth-linux.AppImage/simple-synth-linux.AppImage downloads/
          cp ./downloads/simple-synth-macos.dmg/simple-synth-macos.dmg downloads/
          cp ./downloads/simple-synth-windows.exe/simple-synth-windows.exe downloads/

      - name: Update index.html download links
        run: |
          # Update Linux link
          sed -i 's|href="downloads/[^"]*\.AppImage"|href="downloads/simple-synth-linux.AppImage"|' index.html
          # Update macOS link
          sed -i 's|href="downloads/[^"]*\.dmg"|href="downloads/simple-synth-macos.dmg"|' index.html
          # Update Windows link
          sed -i 's|href="downloads/[^"]*\.exe"|href="downloads/simple-synth-windows.exe"|' index.html

      - name: Commit and push updated downloads and index.html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add downloads/simple-synth-linux.AppImage downloads/simple-synth-macos.dmg downloads/simple-synth-windows.exe index.html
          git commit -m "Update JUCE builds and download links [skip ci]" || echo "No changes to commit"
          git push
